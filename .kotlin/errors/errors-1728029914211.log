kotlin version: 2.0.20
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/Viktor/StudioProjects/MyProjects/Aggregate/core/designsystem/src/main/java/dev/aggregate/designsystem/component/Bars.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:ArticleTopBar visibility:public modality:FINAL <> (sourceName:kotlin.String, url:kotlin.String, bookmarked:kotlin.Boolean, headerHeightPx:kotlin.Float, topBarHeightPx:kotlin.Float, scrollState:androidx.compose.foundation.ScrollState, onBackClick:kotlin.Function0<kotlin.Unit>, onShareClick:kotlin.Function0<kotlin.Unit>, onBookmarkClick:kotlin.Function0<kotlin.Unit>, modifier:androidx.compose.ui.Modifier, colorScheme:androidx.compose.material3.ColorScheme) returnType:kotlin.Unit
  annotations:
    OptIn(markerClass = [CLASS_REFERENCE 'CLASS IR_EXTERNAL_DECLARATION_STUB ANNOTATION_CLASS name:ExperimentalMaterial3Api modality:OPEN visibility:public superTypes:[kotlin.Annotation]' type=kotlin.reflect.KClass<androidx.compose.material3.ExperimentalMaterial3Api>])
    Composable
  VALUE_PARAMETER name:sourceName index:0 type:kotlin.String
  VALUE_PARAMETER name:url index:1 type:kotlin.String
  VALUE_PARAMETER name:bookmarked index:2 type:kotlin.Boolean
  VALUE_PARAMETER name:headerHeightPx index:3 type:kotlin.Float
  VALUE_PARAMETER name:topBarHeightPx index:4 type:kotlin.Float
  VALUE_PARAMETER name:scrollState index:5 type:androidx.compose.foundation.ScrollState
  VALUE_PARAMETER name:onBackClick index:6 type:kotlin.Function0<kotlin.Unit>
  VALUE_PARAMETER name:onShareClick index:7 type:kotlin.Function0<kotlin.Unit>
  VALUE_PARAMETER name:onBookmarkClick index:8 type:kotlin.Function0<kotlin.Unit>
  VALUE_PARAMETER name:modifier index:9 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:colorScheme index:10 type:androidx.compose.material3.ColorScheme
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.material3.ColorScheme
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:topBarBottom$delegate type:androidx.compose.runtime.MutableFloatState [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableFloatState origin=null
        <T>: androidx.compose.runtime.MutableFloatState
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableFloatState> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun ArticleTopBar$lambda$0 ($headerHeightPx: kotlin.Float, $topBarHeightPx: kotlin.Float): androidx.compose.runtime.MutableFloatState declared in dev.aggregate.designsystem.component.BarsKt' type=kotlin.Function0<androidx.compose.runtime.MutableFloatState> origin=INLINE_LAMBDA reflectionTarget=null
            $headerHeightPx: GET_VAR 'headerHeightPx: kotlin.Float declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.Float origin=null
            $topBarHeightPx: GET_VAR 'topBarHeightPx: kotlin.Float declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.Float origin=null
    VAR PROPERTY_DELEGATE name:showTopBar$delegate type:androidx.compose.runtime.State<kotlin.Boolean> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.State<kotlin.Boolean> origin=null
        <T>: androidx.compose.runtime.State<kotlin.Boolean>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.State<kotlin.Boolean>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun ArticleTopBar$lambda$2 ($scrollState: androidx.compose.foundation.ScrollState, $topBarBottom$delegate: androidx.compose.runtime.MutableFloatState): androidx.compose.runtime.State<kotlin.Boolean> declared in dev.aggregate.designsystem.component.BarsKt' type=kotlin.Function0<androidx.compose.runtime.State<kotlin.Boolean>> origin=INLINE_LAMBDA reflectionTarget=null
            $scrollState: GET_VAR 'scrollState: androidx.compose.foundation.ScrollState declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=androidx.compose.foundation.ScrollState origin=null
            $topBarBottom$delegate: GET_VAR 'val topBarBottom$delegate: androidx.compose.runtime.MutableFloatState [val] declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=androidx.compose.runtime.MutableFloatState origin=null
    BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
      VAR IR_TEMPORARY_VARIABLE name:tmp0_visible type:kotlin.Boolean [val]
        CALL 'private final fun ArticleTopBar$lambda$3 ($showTopBar$delegate: androidx.compose.runtime.State<kotlin.Boolean>): kotlin.Boolean declared in dev.aggregate.designsystem.component.BarsKt' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
          $showTopBar$delegate: GET_VAR 'val showTopBar$delegate: androidx.compose.runtime.State<kotlin.Boolean> [val] declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=androidx.compose.runtime.State<kotlin.Boolean> origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp1_enter type:androidx.compose.animation.EnterTransition [val]
        CALL 'public final fun fadeIn$default (animationSpec: androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?, initialAlpha: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.EnterTransition declared in androidx.compose.animation.EnterExitTransitionKt' type=androidx.compose.animation.EnterTransition origin=DEFAULT_DISPATCH_CALL
          animationSpec: TYPE_OP type=androidx.compose.animation.core.TweenSpec<kotlin.Float> origin=IMPLICIT_CAST typeOperand=androidx.compose.animation.core.TweenSpec<kotlin.Float>
            CALL 'public final fun tween$default <T> (durationMillis: kotlin.Int, delayMillis: kotlin.Int, easing: androidx.compose.animation.core.Easing?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> declared in androidx.compose.animation.core.AnimationSpecKt' type=androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> origin=DEFAULT_DISPATCH_CALL
              <T>: kotlin.Float
              durationMillis: CONST Int type=kotlin.Int value=300
              delayMillis: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                CONST Int type=kotlin.Int value=0
              easing: COMPOSITE type=androidx.compose.animation.core.Easing? origin=DEFAULT_VALUE
                CONST Null type=androidx.compose.animation.core.Easing? value=null
              $mask0: CONST Int type=kotlin.Int value=6
              $handler: CONST Null type=kotlin.Any? value=null
          initialAlpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=2
          $handler: CONST Null type=kotlin.Any? value=null
      VAR IR_TEMPORARY_VARIABLE name:tmp2_exit type:androidx.compose.animation.ExitTransition [val]
        CALL 'public final fun fadeOut$default (animationSpec: androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?, targetAlpha: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.ExitTransition declared in androidx.compose.animation.EnterExitTransitionKt' type=androidx.compose.animation.ExitTransition origin=DEFAULT_DISPATCH_CALL
          animationSpec: TYPE_OP type=androidx.compose.animation.core.TweenSpec<kotlin.Float> origin=IMPLICIT_CAST typeOperand=androidx.compose.animation.core.TweenSpec<kotlin.Float>
            CALL 'public final fun tween$default <T> (durationMillis: kotlin.Int, delayMillis: kotlin.Int, easing: androidx.compose.animation.core.Easing?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> declared in androidx.compose.animation.core.AnimationSpecKt' type=androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> origin=DEFAULT_DISPATCH_CALL
              <T>: kotlin.Float
              durationMillis: CONST Int type=kotlin.Int value=300
              delayMillis: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                CONST Int type=kotlin.Int value=0
              easing: COMPOSITE type=androidx.compose.animation.core.Easing? origin=DEFAULT_VALUE
                CONST Null type=androidx.compose.animation.core.Easing? value=null
              $mask0: CONST Int type=kotlin.Int value=6
              $handler: CONST Null type=kotlin.Any? value=null
          targetAlpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=2
          $handler: CONST Null type=kotlin.Any? value=null
      CALL 'public final fun AnimatedVisibility$default (visible: kotlin.Boolean, modifier: androidx.compose.ui.Modifier?, enter: androidx.compose.animation.EnterTransition?, exit: androidx.compose.animation.ExitTransition?, label: kotlin.String?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.animation.AnimatedVisibilityKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
        visible: GET_VAR 'val tmp0_visible: kotlin.Boolean [val] declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.Boolean origin=null
        modifier: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=androidx.compose.ui.Modifier origin=null
        enter: GET_VAR 'val tmp1_enter: androidx.compose.animation.EnterTransition [val] declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=androidx.compose.animation.EnterTransition origin=null
        exit: GET_VAR 'val tmp2_exit: androidx.compose.animation.ExitTransition [val] declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=androidx.compose.animation.ExitTransition origin=null
        label: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
          CONST Null type=kotlin.String? value=null
        content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> origin=null
            <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.material3.ColorScheme, p1: kotlin.String, p2: kotlin.Function0<kotlin.Unit>, p3: kotlin.Function0<kotlin.Unit>, p4: kotlin.Function0<kotlin.Unit>, p5: kotlin.Boolean): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.AnimatedVisibilityScope, kotlin.Unit> origin=null
              p0: GET_VAR 'colorScheme: androidx.compose.material3.ColorScheme declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=androidx.compose.material3.ColorScheme origin=null
              p1: GET_VAR 'sourceName: kotlin.String declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.String origin=null
              p2: GET_VAR 'onBackClick: kotlin.Function0<kotlin.Unit> declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.Function0<kotlin.Unit> origin=null
              p3: GET_VAR 'onShareClick: kotlin.Function0<kotlin.Unit> declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.Function0<kotlin.Unit> origin=null
              p4: GET_VAR 'onBookmarkClick: kotlin.Function0<kotlin.Unit> declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.Function0<kotlin.Unit> origin=null
              p5: GET_VAR 'bookmarked: kotlin.Boolean declared in dev.aggregate.designsystem.component.BarsKt.ArticleTopBar' type=kotlin.Boolean origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun ArticleTopBar$lambda$10 ($colorScheme: androidx.compose.material3.ColorScheme, $sourceName: kotlin.String, $onBackClick: kotlin.Function0<kotlin.Unit>, $onShareClick: kotlin.Function0<kotlin.Unit>, $onBookmarkClick: kotlin.Function0<kotlin.Unit>, $bookmarked: kotlin.Boolean, $this$AnimatedVisibility: androidx.compose.animation.AnimatedVisibilityScope): kotlin.Unit? declared in dev.aggregate.designsystem.component.BarsKt' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.animation.AnimatedVisibilityScope): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        $mask0: CONST Int type=kotlin.Int value=16
        $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableFloatState origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


